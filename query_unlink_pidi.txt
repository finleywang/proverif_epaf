E:\phd\manuscript_frm_vanet\ProVerif\ProVerif>proverif.exe -in pi frm/epaf_reg_auth.ml
Linear part:
XOR(m1_8,m2_9) = XOR(m2_9,m1_8)
Completing equations...
Completed equations:
XOR(m1_8,m2_9) = XOR(m2_9,m1_8)
Convergent part:
Verify(k_6,m_7,Sign(m_7,k_6)) = true()
Dec(k_4,Enc(k_4,m_5)) = m_5
Completing equations...
Completed equations:
Dec(k_4,Enc(k_4,m_5)) = m_5
Verify(k_6,m_7,Sign(m_7,k_6)) = true()
Completed destructors:
DXOR(XOR(m2_130,m1_129),m2_130) => m1_129
DXOR(XOR(m1_125,m2_126),m2_126) => m1_125
DMAC(km_132,MAC(km_132,m_131)) => m_131
Process:
new r0_14;
{1}!
(
    new pw_iu_105;
    {71}out(c_UseriInputForReg, pw_iu_105);
    {72}out(c_UseriInputForRun, pw_iu_105);
    0
) | (
    new pw_ju_104;
    {69}out(c_UserjInputForReg, pw_ju_104);
    {70}out(c_UserjInputForRun, pw_ju_104);
    0
) | (
    new alpha_79;
    new km_80;
    new ts_km_81;
    new PID_i_82;
    new PID_j_83;
    new TDID_i_84;
    new TDID_j_85;
    {50}let S_ID_CA_86 = h(ID_CA()) in
    {51}let kp_87 = GenPubKey(alpha_79,S_ID_CA_86) in
    {52}out(c_pub, S_ID_CA_86);
    {53}in(c_Reg2TA, reg_info_i_88);
    {54}let (ID_i'_89,gamma_iu_90,info_i'_91) = reg_info_i_88 in
    {55}let pS_i_92 = XOR(h((ID_i'_89,TDID_i_84,PID_i_82)),h((TDID_i_84,km_80))) in
    {56}let pU_iu_93 = XOR(h((ID_i'_89,gamma_iu_90,PID_i_82)),h((TDID_i_84,km_80))) in
    {57}let pV_iu_94 = h(XOR(gamma_iu_90,PID_i_82)) in
    {58}let pK_iu_95 = XOR(PID_i_82,h((TDID_i_84,gamma_iu_90))) in
    {59}in(c_Reg2TA, reg_info_j_96);
    {60}let (ID_j'_97,gamma_ju_98,info_j'_99) = reg_info_j_96 in
    {61}let pS_j_100 = XOR(h((ID_j'_97,TDID_j_85,PID_j_83)),h((TDID_j_85,km_80))) in
    {62}let pU_ju_101 = XOR(h((ID_j'_97,gamma_ju_98,PID_j_83)),h((TDID_j_85,km_80))) in
    {63}let pV_ju_102 = h(XOR(gamma_ju_98,PID_j_83)) in
    {64}let pK_ju_103 = XOR(PID_j_83,h((TDID_j_85,gamma_ju_98))) in
    {65}out(c_TA2TDi, (TDID_i_84,pS_i_92,pV_iu_94,pK_iu_95));
    {66}out(c_TA2TPDi, (TDID_i_84,PID_i_82,km_80,pU_iu_93,ts_km_81,pK_iu_95));
    {67}out(c_TA2TDj, (TDID_j_85,pS_j_100,pV_ju_102,pK_ju_103));
    {68}out(c_TA2TPDj, (TDID_j_85,PID_j_83,km_80,pU_ju_101,ts_km_81,pK_ju_103));
    0
) | (
    new ID_i_64;
    new ts_65;
    {36}in(c_UseriInputForReg, pw_iu_66);
    {37}let gamma_iu_67 = h(pw_iu_66) in
    {38}out(c_Reg2TA, (ID_i_64,gamma_iu_67,info_i()));
    {39}in(c_TA2TDi, reg_td_i_68);
    {40}let (TDID_i_69,pS_i_70,pV_iu_71,pK_iu_72) = reg_td_i_68 in
    {41}in(c_UseriInputForRun, pw_iu'_73);
    {42}let gamma_iu'_74 = h(pw_iu'_73) in
    {43}let PID_i'_75 = XOR(pK_iu_72,h((TDID_i_69,gamma_iu'_74))) in
    {44}let pV_iu'_76 = h(XOR(gamma_iu'_74,PID_i'_75)) in
    {45}if pV_iu'_76 = pV_iu_71 then
    {46}let PID_i_ts_77 = XOR(h((ID_i_64,TDID_i_69,PID_i'_75)),h((PID_i'_75,ts_65))) in
    {47}let sigPID_i_78 = h((pS_i_70,PID_i'_75,ts_65)) in
    {48}event beginAuthTPDLogin(PID_i_ts_77,sigPID_i_78,ts_65);
    {49}out(c_ViTD2TPD, (PID_i_ts_77,sigPID_i_78,ts_65));
    0
) | (
    new ID_j_56;
    {31}in(c_UserjInputForReg, pw_ju_57);
    {32}let gamma_ju_58 = h(pw_ju_57) in
    {33}out(c_Reg2TA, (ID_j_56,gamma_ju_58,info_j()));
    {34}in(c_TA2TDj, reg_td_j_59);
    {35}let (TDID_j_60,pS_ju_61,pV_ju_62,pK_ju_63) = reg_td_j_59 in
    0
) | (
    {13}in(c_TA2TPDi, reg_tpd_i_33);
    {14}let (TDID_i_34,PID_i_35,km_36,pU_iu_37,ts_km_38,pK_iu_39) = reg_tpd_i_33 in
    {15}in(c_ViTD2TPD, loginInfo_i_40);
    {16}let (PID_i_ts_41,sigPID_i_42,ts_43) = loginInfo_i_40 in
    {17}let chi_i_44 = DXOR(PID_i_ts_41,h((PID_i_35,ts_43))) in
    {18}let sigPID_i'_45 = h((XOR(chi_i_44,h((TDID_i_34,km_36))),PID_i_35,ts_43)) in
    {19}if sigPID_i'_45 = sigPID_i_42 then
    new m_46;
    {20}let sigMSG_i_47 = MAC(km_36,(PID_i_ts_41,h((m_46,km_36)),ts_43)) in
    {21}event endAuthTPDLogin(PID_i_ts_41,sigPID_i_42,ts_43);
    {22}event beginAuthRequest(PID_i_ts_41,sigMSG_i_47,ts_43,m_46);
    {23}out(c_pub, (choice[PID_i_ts_41,r0_14],sigMSG_i_47,ts_43,m_46));
    {24}in(c_pub, message_j_48);
    {25}let (PID_j_ts'_49,sigMUT_j_50,ts_l_51,m_l_52) = message_j_48 in
    {26}let theta_i'_53 = DXOR(sigMSG_i_47,h((m_l_52,km_36))) in
    {27}let sigMUT_j'_54 = MAC(km_36,(theta_i'_53,h((m_l_52,km_36)),ts_l_51)) in
    {28}if sigMUT_j'_54 = sigMUT_j_50 then
    {29}let accesstoken_55 = MAC(km_36,(PID_i_ts_41,h((m_l_52,km_36)),ts_l_51)) in
    {30}event endAuthMutual(PID_j_ts'_49,sigMUT_j_50,ts_l_51,m_l_52);
    0
) | (
    new m_l_15;
    new ts_l_16;
    new PID_j_ts_17;
    {2}in(c_TA2TPDj, reg_tpd_j_18);
    {3}let (TDID_j_19,PID_j_20,km_21,pU_ju_22,ts_km_23,pK_ju_24) = reg_tpd_j_18 in
    {4}in(c_pub, message_i_25);
    {5}let (PID_i_ts_26,sigMSG_i_27,ts_28,m_29) = message_i_25 in
    {6}let sigMSG_i'_30 = MAC(km_21,(PID_i_ts_26,h((m_29,km_21)),ts_28)) in
    {7}if sigMSG_i'_30 = sigMSG_i_27 then
    {8}event endAuthRequest(PID_i_ts_26,sigMSG_i_27,ts_28,m_29);
    {9}let theta_i_31 = DXOR(sigMSG_i'_30,h((m_l_15,km_21))) in
    {10}let sigMUT_j_32 = MAC(km_21,(theta_i_31,h((m_l_15,km_21)),ts_l_16)) in
    {11}event beginAuthMutual(PID_j_ts_17,sigMUT_j_32,ts_l_16,m_l_15);
    {12}out(c_pub, (PID_j_ts_17,sigMUT_j_32,ts_l_16,m_l_15));
    0
)

-- Observational equivalence
Termination warning: v_515 <> v_516 & attacker2:v_514,v_515 & attacker2:v_514,v_516 -> bad:
Selecting 0
Termination warning: v_518 <> v_519 & attacker2:v_518,v_517 & attacker2:v_519,v_517 -> bad:
Selecting 0
Completing...
Termination warning: v_515 <> v_516 & attacker2:v_514,v_515 & attacker2:v_514,v_516 -> bad:
Selecting 0
Termination warning: v_518 <> v_519 & attacker2:v_518,v_517 & attacker2:v_519,v_517 -> bad:
Selecting 0
200 rules inserted. The rule base contains 200 rules. 367 rules in the queue.
400 rules inserted. The rule base contains 397 rules. 357 rules in the queue.
600 rules inserted. The rule base contains 513 rules. 323 rules in the queue.
800 rules inserted. The rule base contains 549 rules. 606 rules in the queue.
1000 rules inserted. The rule base contains 749 rules. 406 rules in the queue.
1200 rules inserted. The rule base contains 781 rules. 457 rules in the queue.
1400 rules inserted. The rule base contains 901 rules. 418 rules in the queue.
1600 rules inserted. The rule base contains 1093 rules. 285 rules in the queue.
1800 rules inserted. The rule base contains 1293 rules. 179 rules in the queue.
2000 rules inserted. The rule base contains 1492 rules. 607 rules in the queue.
2200 rules inserted. The rule base contains 1690 rules. 926 rules in the queue.
2400 rules inserted. The rule base contains 1890 rules. 1310 rules in the queue.
2600 rules inserted. The rule base contains 2090 rules. 1660 rules in the queue.
2800 rules inserted. The rule base contains 2290 rules. 1663 rules in the queue.
3000 rules inserted. The rule base contains 2489 rules. 1716 rules in the queue.
3200 rules inserted. The rule base contains 2689 rules. 1805 rules in the queue.
3400 rules inserted. The rule base contains 2889 rules. 1867 rules in the queue.
3600 rules inserted. The rule base contains 3089 rules. 1929 rules in the queue.
3800 rules inserted. The rule base contains 3289 rules. 1990 rules in the queue.
4000 rules inserted. The rule base contains 3489 rules. 2018 rules in the queue.
4200 rules inserted. The rule base contains 3689 rules. 2080 rules in the queue.
4400 rules inserted. The rule base contains 3889 rules. 2090 rules in the queue.
4600 rules inserted. The rule base contains 4089 rules. 2085 rules in the queue.
4800 rules inserted. The rule base contains 4289 rules. 2083 rules in the queue.
5000 rules inserted. The rule base contains 4489 rules. 2079 rules in the queue.
5200 rules inserted. The rule base contains 4689 rules. 2075 rules in the queue.
5400 rules inserted. The rule base contains 4889 rules. 2071 rules in the queue.
5600 rules inserted. The rule base contains 5089 rules. 2069 rules in the queue.
5800 rules inserted. The rule base contains 5289 rules. 2065 rules in the queue.
6000 rules inserted. The rule base contains 5489 rules. 2062 rules in the queue.
6200 rules inserted. The rule base contains 5689 rules. 2060 rules in the queue.
6400 rules inserted. The rule base contains 5889 rules. 2056 rules in the queue.
6600 rules inserted. The rule base contains 6089 rules. 2056 rules in the queue.
6800 rules inserted. The rule base contains 6289 rules. 2056 rules in the queue.
7000 rules inserted. The rule base contains 6489 rules. 2056 rules in the queue.
7200 rules inserted. The rule base contains 6689 rules. 2056 rules in the queue.
7400 rules inserted. The rule base contains 6889 rules. 2056 rules in the queue.
7600 rules inserted. The rule base contains 7089 rules. 2056 rules in the queue.
7800 rules inserted. The rule base contains 7289 rules. 2056 rules in the queue.
8000 rules inserted. The rule base contains 7489 rules. 2056 rules in the queue.
8200 rules inserted. The rule base contains 7689 rules. 2056 rules in the queue.
8400 rules inserted. The rule base contains 7889 rules. 2056 rules in the queue.
8600 rules inserted. The rule base contains 8089 rules. 1990 rules in the queue.
8800 rules inserted. The rule base contains 8289 rules. 1878 rules in the queue.
9000 rules inserted. The rule base contains 8489 rules. 1742 rules in the queue.
9200 rules inserted. The rule base contains 8689 rules. 1669 rules in the queue.
9400 rules inserted. The rule base contains 8889 rules. 1541 rules in the queue.
9600 rules inserted. The rule base contains 9089 rules. 1462 rules in the queue.
9800 rules inserted. The rule base contains 9289 rules. 1348 rules in the queue.
10000 rules inserted. The rule base contains 9489 rules. 1284 rules in the queue.
10200 rules inserted. The rule base contains 9689 rules. 1183 rules in the queue.
10400 rules inserted. The rule base contains 9889 rules. 1092 rules in the queue.
10600 rules inserted. The rule base contains 10089 rules. 911 rules in the queue.
10800 rules inserted. The rule base contains 10289 rules. 711 rules in the queue.
11000 rules inserted. The rule base contains 10489 rules. 511 rules in the queue.
11200 rules inserted. The rule base contains 10689 rules. 311 rules in the queue.
11400 rules inserted. The rule base contains 10889 rules. 111 rules in the queue.
RESULT Observational equivalence is true (bad not derivable).

E:\phd\manuscript_frm_vanet\ProVerif\ProVerif>